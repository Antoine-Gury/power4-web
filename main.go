// D√©claration du package principal (point d'entr√©e du programme)
package main

// Import des packages n√©cessaires
import (
	"fmt"        // Package pour formater et afficher du texte
	"log"        // Package pour g√©rer les logs et erreurs fatales
	"net"        // Package pour les op√©rations r√©seau (trouver un port)
	"net/http"   // Package pour cr√©er le serveur HTTP
	"power4/src" // Import de notre package personnalis√© contenant les handlers
)

// Fonction pour trouver automatiquement un port libre sur la machine
func findFreePort() (int, error) {
	// Cr√©e un listener TCP sur le port 0 (le syst√®me attribue automatiquement un port libre)
	listener, err := net.Listen("tcp", ":0")
	// Si une erreur survient lors de la cr√©ation du listener
	if err != nil {
		// Retourne 0 et l'erreur
		return 0, err
	}
	// Ferme le listener apr√®s avoir r√©cup√©r√© le port (defer = ex√©cut√© √† la fin de la fonction)
	defer listener.Close()

	// R√©cup√®re l'adresse du listener et extrait le num√©ro de port
	port := listener.Addr().(*net.TCPAddr).Port
	// Retourne le port trouv√© et nil (pas d'erreur)
	return port, nil
}

// Fonction principale qui d√©marre le serveur et le jeu
func main() {
	// Initialise une nouvelle partie de Power4
	src.InitGame()

	// D√©finit la route GET pour afficher la page d'accueil du jeu
	http.HandleFunc("/", src.HomeHandler)
	// D√©finit la route POST pour jouer un coup (recevoir la colonne choisie)
	http.HandleFunc("/play", src.PlayHandler)
	// D√©finit la route POST pour r√©initialiser le jeu (nouvelle partie)
	http.HandleFunc("/reset", src.ResetHandler)

	// Appelle la fonction pour trouver un port libre
	port, err := findFreePort()
	// Si une erreur survient lors de la recherche du port
	if err != nil {
		// Arr√™te le programme et affiche l'erreur
		log.Fatal("‚ùå Erreur lors de la recherche d'un port libre:", err)
	}

	// Construit l'URL compl√®te du jeu avec le port trouv√©
	gameURL := fmt.Sprintf("http://localhost:%d", port)
	// Affiche un message de d√©marrage r√©ussi
	fmt.Println("üéÆ Serveur Power4 d√©marr√© avec succ√®s !")
	// Affiche le lien cliquable pour acc√©der au jeu
	fmt.Printf("üîó Acc√©dez au jeu ici : %s\n", gameURL)
	// Affiche les instructions pour arr√™ter le serveur
	fmt.Println("‚èπÔ∏è  Appuyez sur Ctrl+C pour arr√™ter le serveur")

	// Construit l'adresse au format ":port" pour le serveur
	address := fmt.Sprintf(":%d", port)
	// Lance le serveur HTTP sur le port trouv√© (bloque ici jusqu'√† l'arr√™t du serveur)
	log.Fatal(http.ListenAndServe(address, nil))
}
